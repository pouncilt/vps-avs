Ext.ns("LLVA");LLVA.Session=function(e,c){var i=["Ext.LoadMask","Ext.window.MessageBox"],b=null,m=null,n={userInfo:"../w/s/user/userInfo.action",facilities:"../w/login/stations.action",login:"../w/login/LoginController",logout:"../w/login/logout.action"},r=null;k(e,c);function k(t,s){Ext.syncRequire(i);if(Ext.isFunction(t)){b=t}else{return f("No login callback function is set.")}m=new Ext.LoadMask(Ext.getBody(),{msg:"Loading Session..."});m.show();o(s);l()}function l(){Ext.Ajax.request({url:n.userInfo,method:"GET",extraParams:q(),success:function(t){var s=Ext.JSON.decode(t.responseText);m.hide();if(s.success&&s.totalCount==1){r=g(s.root[0]);b(r)}else{f("Malformed Session User data returned from server")}},failure:function(t,s){m.hide();if(t.status==403){h()}else{j(t,s)}}})}function f(s,t){if(Ext.isEmpty(t)){t="Error"}Ext.Msg.show({title:t,buttons:Ext.Msg.OK,msg:s,icon:Ext.MessageBox.ERROR})}function j(t,s){return f("The server returned an unexpected error.  Unable to proceed.<br /><br />URI: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "+s.url.replace(/\?.*/,"")+"<br />Response: &nbsp; "+t.status+" "+t.statusText)}function o(s){if(Ext.isObject(s)){for(key in s){if(n.hasOwnProperty(key)){n[key]=s[key]}}}}function q(){var s={};var t=Ext.urlDecode(location.search.substring(1));if(t.stationNo){s.institution=t.stationNo}if(t.userDuz){s.userDuz=t.userDuz}return s}function g(s){Ext.syncRequire("Ext.data.Model");Ext.define("LLVA.Session.model.User",{extend:"Ext.data.Model",fields:[{name:"userDuz"},{name:"userName01"},{name:"userNameDisplay"},{name:"userparentAdministrativeFacilityStationNumber"},{name:"userParentComputerSystemStationNumber"},{name:"userLastName"},{name:"userFirstName"},{name:"userMiddleName"},{name:"userPrefix"},{name:"userSuffix"},{name:"userDegree"},{name:"signonLogIen"},{name:"userLoginStationNumber"},{name:"divisionName"},{name:"userRoles"}],init:function(){var t=this.get("userRoles");if(typeof t=="undefined"){this.set("userRoles",[])}else{if(typeof t=="string"){this.set("userRoles",t.split("^"))}}},hasRole:function(v){var u=this.get("userRoles");for(var t=0;t<u.length;t++){if(u[t]==v){return true}}return false}});return Ext.create("LLVA.Session.model.User",s)}function h(){var s=Ext.create("Ext.window.Window",{requires:["Ext.util.Cookies"],layout:"fit",width:550,height:440,title:"Restricted Access",plain:true,hidden:false,closable:false,resizable:false,border:false,modal:true,draggable:false,items:[{xtype:"form",id:"loginForm",fieldDefaults:{labelWidth:80},frame:true,items:[{xtype:"textarea",id:"vaMessage",width:522,height:275,hideLabel:true,readOnly:true,style:{marginBottom:"12px"},value:"U.S. Government Computer System\n\nU. S. government systems are intended to be used by authorized government network users for viewing and retrieving information only, except as otherwise explicitly authorized for official business and limited personal use in accordance with policy. Information from these systems resides on and transmits through computer systems and networks funded by the government. All access or use constitutes understanding and acceptance that there is no reasonable expectation of privacy in the use of Government networks or systems.\n\nThe data and documents on this system include Federal records that contain sensitive information protected by various Federal statutes, including the Privacy Act, 5 U.S.C. Section 552a, and veterans' records confidentiality statutes such as 38 U.S.C. Sections 5701 and 7332. Access to the data and records is on a need-to-know basis only.\n\nAll access or use of this system constitutes user understanding and acceptance of these terms and constitutes unconditional consent to review and action including (but not limited to) monitoring, recording, copying, auditing, inspecting, investigating, restricting access, blocking, tracking, disclosing to authorized personnel, or any other authorized actions by all authorized government and law enforcement personnel.\n\nUnauthorized user attempts or acts to (1) access, upload, change, or delete information on this system, (2) modify this system, (3) deny access to this system, (4) accrue resources for unauthorized use or (5) otherwise misuse this system are strictly prohibited. Such attempts or acts are subject to action that may result in criminal, civil, or administrative penalties."},{xtype:"combobox",id:"facilityNo",fieldLabel:"Institution",name:"station",width:435,store:d(),displayField:"divisionName",valueField:"stationNumber",autoSelect:true,forceSelection:true,selectOnFocus:true,allowBlank:false,blankText:"Please select your VA institution."},{xtype:"textfield",id:"access",name:"access",fieldLabel:"Access Code",inputType:"password",allowBlank:false,blankText:"Please enter your Vista Access Code.",value:""},{xtype:"textfield",id:"verify",name:"verify",fieldLabel:"Verify Code",inputType:"password",allowBlank:false,blankText:"Please enter your Vista Verify Code.",value:""}],buttons:[{text:"Login",action:"login",formBind:true,width:150}]}]});p(s);s.show()}function p(t){var s=function(v,u){if(u.getKey()==u.ENTER){a(v.up("form"))}};t.down("field[id=access]").on("specialkey",s);t.down("field[id=verify]").on("specialkey",s);t.down("button[action=login]").on("click",function(u){a(u.up("form"))})}function d(){Ext.syncRequire("Ext.util.Cookies");var s=Ext.create("Ext.data.Store",{fields:[{name:"divisionName",type:"string"},{name:"stationNumber",type:"string"}],autoLoad:{scope:this,callback:function(){var v=Ext.getCmp("facilityNo");var w=Ext.getCmp("access");var x=v.store;var u=Ext.util.Cookies.get("gov.va.med.lom.defaultFacilityNo");if(u&&x.findExact("stationNumber",u)>=0){v.setValue(u);w.focus(false,false)}else{if(x.getTotalCount()>0){var t=x.first().data.stationNumber;v.setValue(t);w.focus(false,false)}else{v.focus(false,false)}}}},proxy:{type:"ajax",api:{read:n.facilities},listeners:{exception:function(v,u,t,w){j(u,u.request.options);return false}},reader:{type:"json",root:"root",successProperty:"success"}}});return s}function a(s){if(!s.getForm().isValid()){return f("Please complete the form and try again","Login Failed")}Ext.syncRequire("Ext.util.Cookies");var t=new Date();t.setDate(t.getDate()+365);Ext.util.Cookies.set("gov.va.med.lom.defaultFacilityNo",s.down("field[id=facilityNo]").value,t);s.down("field[id=vaMessage]").disable();s.submit({clientValidation:true,url:n.login,method:"POST",waitTitle:"In Progress",waitMsg:"Communicating with server...",failure:function(u,v){s.down("field[id=vaMessage]").enable();switch(v.failureType){case Ext.form.Action.CLIENT_INVALID:f("Access and/or Verify code not valid at the selected institution","Login Failed");break;case Ext.form.Action.CONNECT_FAILURE:f("Remote server failed to respond","Login Failed");break;case Ext.form.Action.SERVER_INVALID:f(v.result.errors,"Login Failed");break}},success:function(){s.up("window").close();l()}})}this.getUser=function(){return r};this.logout=function(){m=new Ext.LoadMask(Ext.getBody(),{msg:"Logging out..."});m.show();Ext.Ajax.request({url:n.logout,method:"POST",failure:function(t,s){m.hide();j(t,s)},success:function(s){window.location.href=window.location.href}})}};